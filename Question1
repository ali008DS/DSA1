
'''ðŸ’¡  Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
**Example:**
Input: nums = [2,7,11,15], target = 9
Output0 [0,1]'''
def two_sum(nums, target):
    # Create a dictionary to store the elements and their indices
    num_indices = {}

    for i, num in enumerate(nums):
        # Calculate the complement value required to reach the target
        complement = target - num

        # Check if the complement is in the dictionary
        if complement in num_indices:
            # If yes, return the indices of the current element and its complement
            return [num_indices[complement], i]

        # If the complement is not in the dictionary, add the current element and its index to the dictionary
        num_indices[num] = i

    # If no solution is found, return an empty list or raise an exception, depending on the requirements
    return []

# Example usage:
nums = [2, 7, 11, 15]
target = 9
result = two_sum(nums, target)
print(result)  # Output: [0, 1]
